<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.dongnao.mall</groupId>
	<artifactId>controller</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<parent>
		<groupId>com.dongnao.mall</groupId>
		<artifactId>parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.dongnao.mall</groupId>
			<artifactId>service</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<!-- 开发 -->
		<profile>
			<!-- profile的id -->
			<id>dev</id>
			<properties>
				<!-- 此处的env可以自定义，其他地方可以使用${env}来引用此属性 -->
				<env>devResoure</env>
			</properties>
		</profile>

		<!-- 测试 -->
		<profile>
			<id>test</id>
			<properties>
				<env>testResoure</env>
			</properties>
		</profile>

		<!-- 生产 -->
		<profile>
			<id>prod</id>
			<properties>
				<env>prdResoure</env>
			</properties>
		</profile>

	</profiles>

	<!--<build>
		<plugins>
			&lt;!&ndash; 资源文件处理插件，必须配置 &ndash;&gt;
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>

		&lt;!&ndash; 最后生成的资源文件 &ndash;&gt;
		<resources>
			&lt;!&ndash; 所有公共资源文件 &ndash;&gt;
			<resource>
				<directory>src/main/resources</directory>
			</resource>

			&lt;!&ndash; 不同环境的资源文件 &ndash;&gt;
			<resource>
				<directory>src/main/filters/${env}</directory>
			</resource>
		</resources>

	</build>-->
	
	<!-- 配置当前模块构建过程中的特殊设置 -->
	<!-- 配置当前模块构建过程中的特殊设置 -->
	<build>
		<!-- 设置最终打成的包的名称 -->
		<finalName>controllerMvn</finalName>

		<plugins>
			<plugin>
				<!-- cargo是一个专门启动servlet容器(jboss、weblogic、jetty、tomcat)的组件 -->
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.2.3</version>

				<!-- 针对插件进行配置 -->
				<configuration>
					<container>
						<!-- 配置tomcat的id -->
						<containerId>tomcat7x</containerId>
						<!-- 配置tomcat所在位置 -->
						<home>/Users/hank/work/apache-tomcat-7.0.52</home>
					</container>
					<configuration>
						<type>existing</type>
						<home>/Users/hank/work/apache-tomcat-7.0.52</home>
						<properties>
							<!-- 服务端口，如果tomcat端口为默认8080则不必设置该属性 -->
							<cargo.servlet.port>8989</cargo.servlet.port>
						</properties>
					</configuration>
				</configuration>

				<!-- 配置插件在什么情况下执行 -->
				<executions>
					<execution>
						<id>cargo-run</id>

						<!-- 生命周期的阶段 -->
						<phase>install</phase>
						<goals>
							<!-- 插件的目标 -->
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>